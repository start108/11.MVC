<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="com.model2.mvc.service.domain.Product">
		<result property="prodNo" 		column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 		column="price" 				jdbcType="NUMERIC" />
		<result property="fileName" 	column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="com.model2.mvc.service.domain.Product" >
	 	INSERT
		INTO product 
		VALUES	 ( seq_product_prod_no.nextval, #{prodName}, #{prodDetail},
					#{manuDate}, #{price}, #{fileName}, SYSDATE )
	 </insert>
	
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="string"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name, prod_detail, manufacture_day, price, image_file, reg_date 		
		FROM product 
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="com.model2.mvc.service.domain.Product" >
	   	UPDATE product
	   	<set>
			prod_name	= #{prodName},
			prod_detail = #{prodDetail} ,
			manufacture_day	= #{manuDate},
			price		= #{price},
			image_file	= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST 안의 내용물을 가져오는 SQL-->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(SELECT prod_no, prod_name , prod_detail, manufacture_day, price, image_file, reg_date
									FROM product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				and LOWER(prod_name) LIKE LOWER('%'|| #{searchKeyword}||'%') 
													</if>
												<if	test="priceDetail != null">
													<if test="priceDetail == 0">
														and price &gt; 0
													</if>
													
													<if test="priceDetail == 1">
														and price &lt; 100000
													</if>
													
													<if test="priceDetail == 2">
														and price between 100000 and 200000
														<!-- and price &gt;= 20000 and price &lt; 40000 -->
													</if>
													
													<if test="priceDetail == 3">
														and price between 200000 and 300000
														
													</if>
													
													<if test="priceDetail == 4">
														and price between 300000 and 400000
														
													</if>
													
													<if test="priceDetail == 5">
														and price &gt;= 500000
														
													</if>
												</if>	
													<if	test="currentRegDate != null">
														<if test="currentRegDate == 0">
														and reg_date > SYSDATE-7
														</if>
												   </if>
												</where>
											</if>
											ORDER BY prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
		
	<!-- SQL : SELECT ROW Count List의 갯수만을 가져오는 SQL-->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(SELECT prod_no, prod_name , prod_detail, manufacture_day, price, image_file, reg_date
									FROM product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				LOWER(prod_name) LIKE LOWER('%'|| #{searchKeyword}||'%') 
													</if>
												<if	test="priceDetail != null">
													<if test="priceDetail == 0">
														and price &gt; 0
													</if>
													
													<if test="priceDetail == 1">
														and price &lt; 100000
													</if>
													
													<if test="priceDetail == 2">
														and price between 100000 and 200000
														<!-- and price &gt;= 20000 and price &lt; 40000 -->
													</if>
													
													<if test="priceDetail == 3">
														and price between 200000 and 300000
														
													</if>
													
													<if test="priceDetail == 4">
														and price between 300000 and 400000
														
													</if>
													
													<if test="priceDetail == 5">
														and price &gt;= 500000
														
													</if>
												</if>	
													<if	test="currentRegDate != null">
														<if test="currentRegDate == 0">
														and reg_date > SYSDATE-7
														</if>
												   </if>
												</where>
											</if>) countTable						
	 </select>
</mapper>